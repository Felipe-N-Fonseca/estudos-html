* { /* seletor universal, aplica em todas as tags abaixo dele, pode ser sobrescrito com uma tag mais especifica, como no caso do h1 */
  box-sizing: border-box;
}

body {
  font-family: Arial, Helvetica, sans-serif;
}

/* Style the header */
header {
  background-color: #666;
  padding: 30px;
  text-align: center;
  font-size: 35px;
  color: white;
}

/* Create two columns/boxes that floats next to each other */
nav {
  float: left;
  width: 30%;

  background: #ccc;
  padding: 20px;
}

/* Style the list inside the menu */
nav ul {
  list-style-type: none;
  padding: 0;
}

article {
  float: left;
  padding: 20px;
  width: 70%;
  background-color: #f1f1f1;
}

/* Clear floats after the columns */
section::after {
  background: #ccc;
  content: "";
  display: table;
  clear: both;
}

/* Style the footer */
footer {
  background-color: #777;
  padding: 10px;
  text-align: center;
  color: white;
}

/* Responsive layout - makes the two columns/boxes stack on top of each other instead of next to each other, on small screens */
@media (max-width: 600px) {
  nav, article {
    width: 100%;
    height: auto;
  }
}
/*[type="text"]{
tudo que entra aqui será aplicado nos elementos tipo text
}

UNIDADES: 

para medidas temos fixas: px e pt;
e para relativas temos:  %, em e rem;
em é uma unidade relativa ao elemento pai
rem é uma unidade relativa ao valor do html

BOX-MODEL: 

definir um display como block, cada elemento ocupa uma linha
o padrão do display é in line que todos os elementos ocupam até o fim da linha
font-size é o tamanho da fonte e o font-weight é o peso da fonte

POSICIONAMENTO: 

static é o padrão do html, onde cada item segue o de cima
relative define aquele elemento como uma referencia para o absolute
absolute ignora outros elementos que não estiverem no mesmo estado que ele, 
usando de referencia algo que foi definido pra isso, ou se não, o cabeçalho do programa
fixed usa o root da pagina e fica fixo naquela posição e não tem barra de rolagem
z-index trabalha com posicionamento de sobreposição, ou seja se um fica por cima do outro
sempre o mais pra tela será o menor e o maior será mais perto da pagina

o atributo overflow: hidden; define que elementos que estiverem fora dele vizualmente mas 
dentro da tag, fiquem escondidos.

*/