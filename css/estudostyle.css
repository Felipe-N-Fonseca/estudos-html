* { /* seletor universal, aplica em todas as tags abaixo dele, pode ser sobrescrito com uma tag mais especifica, como no caso do h1 */
  box-sizing: border-box;
}

body {
  font-family: Arial, Helvetica, sans-serif;
}

/* Style the header */
header {
  background-color: #666;
  padding: 30px;
  text-align: center;
  font-size: 35px;
  color: white;
}

/* Create two columns/boxes that floats next to each other */
nav {
  float: left;
  width: 30%;

  background: #ccc;
  padding: 20px;
}

/* Style the list inside the menu */
nav ul {
  list-style-type: none;
  padding: 0;
}

article {
  float: left;
  padding: 20px;
  width: 70%;
  background-color: #f1f1f1;
}

/* Clear floats after the columns */
section::after {
  background: #ccc;
  content: "";
  display: table;
  clear: both;
}

/* Style the footer */
footer {
  background-color: #777;
  padding: 10px;
  text-align: center;
  color: white;
}

/* Responsive layout - makes the two columns/boxes stack on top of each other instead of next to each other, on small screens */
@media (max-width: 600px) {
  nav, article {
    width: 100%;
    height: auto;
  }
}
/*[type="text"]{
tudo que entra aqui será aplicado nos elementos tipo text
}

SITES:

lipisium
remove.bg
tinypng.com
color.adobe.com

UNIDADES: 

para medidas temos fixas: px e pt;
e para relativas temos:  %, em e rem;
em é uma unidade relativa ao elemento pai
rem é uma unidade relativa ao valor do html

BOX-MODEL: 

definir um display como block, cada elemento ocupa uma linha
o padrão do display é in line que todos os elementos ocupam até o fim da linha
font-size é o tamanho da fonte e o font-weight é o peso da fonte

POSICIONAMENTO: 

static é o padrão do html, onde cada item segue o de cima
relative define aquele elemento como uma referencia para o absolute
absolute ignora outros elementos que não estiverem no mesmo estado que ele, 
usando de referencia algo que foi definido pra isso, ou se não, o cabeçalho do programa
fixed usa o root da pagina e fica fixo naquela posição e não tem barra de rolagem
z-index trabalha com posicionamento de sobreposição, ou seja se um fica por cima do outro
sempre o mais pra tela será o menor e o maior será mais perto da pagina

o atributo overflow: hidden; define que elementos que estiverem fora dele vizualmente mas 
dentro da tag, fiquem escondidos.

COMBINADORES: 

filha: header > h2{}
descendente:  header h2{}
irmão:  h2 + p{}
irmão: div ~ p{}

filha, a combinação filha é > e a diferença entre usar ele e apenas o espaço é que 
com espaço se aplica a todas aquelas tags que estão ali dentro, enquanto com > só
se aplica ao elemento que for filha direta
irmão adjacente são os elementos que estão na mesma coluna e que vem na sequencia
irmão geral são todos os elementos que estiverem na mesma coluna e vierem depois desse

usar o :houver colado em uma tag define um comportamento ao passar o mouse em cima dela
a:hover {}
:visited para comportamento de links ja visitados
a:visited {}
:active é para um comportamento após clicar em algo
a:active {}

RESET: 

o reset é um conjunto de tags que tem seu codigo zerados do padrão para que sejam 
programadas em especifico sozinhas, dessa maneira não acontece uma divergencia 
tão grande entre os navegadores.

TIPOGRAFIA: 

a font-family da fonte é como uma classe de fontes parecidas ou a propria fonte
font-size é o tamanho da fonte
font-weight é o peso dela que vão de 100 a 600 sendo 600 o mais pesado
letter-spacing é o espaçamento das letras
line-height é o espaçamento das linhas

ao escolher uma familia o computador vai escolher uma das fontes que ele mais usa
no próprio computador ou seja instaladas

mas nós podemos importar a fonte no site, assim temos um controle maior da fonte usada
as instruções estão la no google-fonts

você também pode definir tudo em um só comando font: (opicional: estilo) size(/line-height), family, weight;

CORES: 

existem duas propriedades pra declarar cores: 
color: que define as cores pra objetos mais voltados a texto
backgound: define a cor do elemento todo

existem 3 tipos de declaração de cor: ;
hexadecimal:  #0F0F0F que vai de 0 a 15, sendo o f o 15
rgb: (r , g , b) colocando números no seu lugar e vai de 0 a 255
rgba: (r , g , b , a) o a é a caracteristica alfa que define transparência

para importar uma imagem use background: url(); e linke
para a imagem não repetir use o no-repeat e ela vira uma só
para não ficar faltando um pedaço é recomendado usar o center top e colocar a cor pra completar: ;
background: url(...) center top no-repeat #000000;

CSS PARA TABELAS: 

para importar um outro css pra dentro do arquivo use @import 'nome' ou url()
e tem que estar antes dos outros comandos

para acessar só a primeira coluna, use table tr td:first-child
para as demais, use table tbody tr:nth-cild(0) no parenteses escolha a desejada
para as linhas pares use even e pra impares use odd
border-collapse: collapse; para unir as bordas ao invés de ficarem duplicadas
vertical-align: é a propriedade para alinhar de baixo pra cima ao invés de laterais

LAYOUTS FLUIDOS:

uma alternativa para o 100% é usar o 100vw que significa viewport widht, ou seja o tamanho da pagina, ou para altura vh.

propriedade float ajuda a não quebrar linhas, deixando para o lado escolhido
box-sizing: border-box; é o que define o que o css vai considerar na hora de usar o tamanho automático, nesse caso, considera o pading e a borda
overflow: é sobre o conteudo que está fora do body
com o overlay, voce continua com a barra de rolagem vertical mas não com a lateral
usando o elemento margin: 0 auto; ele fica centralizado

ADAPTAÇÃO DE IMAGENS PARA WEB:

para repetir uma imagem varias vezes, use o background-repeat: e nele existem as opções

ELEMENTOS GRÁFICOS DO HTML:

para adicionar um scroll em uma div, basta no css usar a propriedade overflow: scroll;
para transformar uma div em triangulo basta zerar um dos valores do border
existe um tipo de imagens, svg que são imagens vetoriais, são feitas com a linguagem xml e são extremamente leves.
da pra usar a tag <canva> também, que é controlado pelo js

FILTROS E MANIPULAÇÃO COM CSS:

filter: ; é um parametro do css que ja trabalha com alguns por padrão
grayscale é para usar o cinza
blur é desfoque, é muito agrssivo, use escalas baixas
brigtnes é o brilho 100% é o normal
invert deixa negativo
opacity para definir a transparencia de um objeto
saturate é o contraste
sepia para ficar meio dourado
drop-shadow cria uma sombra
usando os (vertical, horizontal, dispersão e cor)
uma alternativa é o box-shadow:;
voce pode adicionar varios filtros, simplesmente dando espaço

LAYOUT SEMÂNTICO:

float:; não faz a quebra de linha e posiciona o elemento onde deseja
para selecionar varios elementos iguais use o ctrl d selecionando o elemento e escreve em todos juntos
max-widht cuida do tamanho maximo que ela pode ocupar
se adicionar um espaço na class do html, você usa duas classes pra aquele elemento
columns: 150px 3; faz com que quando o texto atinja 150px ela quebre, isso em até 3 vezes

NAVEGAÇÃO WEB:

você pode criar uma div com uma class simplismente escrevendo o nome da .class e apertar enter que o resto é automatico

INTRODUÇÃO A WEB DESIGN RESPONSIVO:

primeiro defina o viewport
para criar um layout para dispositivos diferentes use @media (max-width: 425px){} e dentro das chaves, digite todo o codigo css
é bom trabalhar com os break points
que são: desktop 1024, tablet 768 e celular 320

POST DE BLOG:

é uma boa pratica definir o font-size: 62.5%; no html que equivale a 10px para unificar a fonte em muitos navegadores
se quer limitar a sua pagina, pode botar tudo dentro de um conteiner, e limitar o tamanho dele, assim tendo mais controle

EMAIL MARKETING:

se adicionar (tr>td)*3 o emmet ja de adiciona 3 linhas e colunas




*/